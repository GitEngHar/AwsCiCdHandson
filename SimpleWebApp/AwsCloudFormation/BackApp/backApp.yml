Description:  back for certdbfunction
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Backend Configuration"
        Parameters:
          - MysqlUserPassword
          - DbName
          - TbName
          - MysqlUserName
    ParameterLabels:
      MysqlUserPassword:
        default: "MysqlUserPassword"
      DbName:
        default: "DbName"
      TbName:
        default: "TbName"
      MysqlUserName:
        default: "MysqlUserName"
Parameters:
  MysqlUserPassword:
    Type: String
    Default : "Passw0rd"
  DbName:
    Type: String
    Default : "SAMPLEDB"
  TbName:
    Type: String
    Default: "certtb"
  MysqlUserName:
    Type: String
    Default: "mysqlUser"
  ClusterName:
    Type: String
    Default: BG-deploy-front
Resources:
  # TargetGroupの作成
  ALBTargetGroupBlue:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Group
          Value: Example
      TargetType: ip
      UnhealthyThresholdCount: 4
      VpcId: !ImportValue Vpc-ID
  ALBTargetGroupGreen:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Group
          Value: Example
      TargetType: ip
      UnhealthyThresholdCount: 4
      VpcId: !ImportValue Vpc-ID
  # ALBの作成
  webAppALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !ImportValue SecurityGroupBackALB-ID
      Subnets:
        - !ImportValue PublicSubnet1-ID
        - !ImportValue PublicSubnet2-ID
      Tags:
        - Key: Group
          Value: Example2
      Type: application
      IpAddressType: ipv4
  # ALBの本番トラフィック
  ALBListenerProdTraffic:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref ALBTargetGroupBlue
                Weight: 1
      LoadBalancerArn: !Ref webAppALB
      Port: 80
      Protocol: HTTP
  # ALBの本番トラフィックのルール
  ALBListenerProdRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref ALBTargetGroupBlue
                Weight: 1
      Conditions:
        - Field: http-header
          HttpHeaderConfig:
            HttpHeaderName: User-Agent
            Values:
              - Mozilla
      ListenerArn: !Ref ALBListenerProdTraffic
      Priority: 1
  # Blueタスクの定義
  BlueTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ExecutionRoleArn: !ImportValue ECSTaskExecutionRole-Arn
      ContainerDefinitions:
        - Name: certdbfunction
          Image: '429535751272.dkr.ecr.ap-northeast-1.amazonaws.com/certdbfunction:latest'
          Essential: true
          Environment:
            - Name  : "MYSQL_USER_PASSWORD"
              Value : !Ref MysqlUserPassword
            - Name  : "DB_NAME"
              Value : !Ref DbName
            - Name  : "MYSQL_ENDPOINT"
              Value : !ImportValue DBInstance-endpoint
            - Name  : "TB_NAME"
              Value : !Ref TbName
            - Name  : "MYSQL_USER_NAME"
              Value : !Ref MysqlUserName
          PortMappings:
            - HostPort: 8000
              Protocol: tcp
              ContainerPort: 8000
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: '256'
      Memory: '512'
      Family: ecs-demo
# ECSクラスタの作成
  ECSDemoCluster:
      Type: 'AWS::ECS::Cluster'
      Properties: 
        ClusterName: !Ref ClusterName
  ECSDemoService:
      Type: 'AWS::ECS::Service'
      Properties:
        Cluster: !Ref ECSDemoCluster
        DesiredCount: 1
        DeploymentController:
          Type: EXTERNAL
  # ブルータスクセット
  BlueTaskSet:
    Type: 'AWS::ECS::TaskSet'
    Properties:
      Cluster: !Ref ECSDemoCluster
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsVpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue SecurityGroupBackService-ID
          Subnets:
            - !ImportValue  PublicSubnet1-ID
            - !ImportValue PublicSubnet2-ID
      PlatformVersion: 1.4.0
      Scale:
        Unit: PERCENT
        Value: 100
      Service: !Ref ECSDemoService
      TaskDefinition: !Ref BlueTaskDefinition
      LoadBalancers:
        - ContainerName: certdbfunction
          ContainerPort: 8000
          TargetGroupArn: !Ref ALBTargetGroupBlue
  # プライマリタスクセット
  PrimaryTaskSet:
    Type: 'AWS::ECS::PrimaryTaskSet'
    Properties:
      Cluster: !Ref ECSDemoCluster
      Service: !Ref ECSDemoService
      TaskSetId: !GetAtt 
        - BlueTaskSet
        - Id
  